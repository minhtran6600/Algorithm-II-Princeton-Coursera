import java.awt.Color;
import edu.princeton.cs.algs4.Picture;
public class SeamCarver {
	private int h, w;					// Height and width of the Picture
	private Color[][] colors;			// Color of each pixel
	
	/*
	 * Constructor to the Seam Carver
	 */
	public SeamCarver(Picture picture)
	{
		h = picture.height();
		w = picture.width();
		colors = new Color[w][h];
		
		for (int i = 0; i < w; i++)
			for (int j = 0; j < h; j++)
			{
				int rgb = picture.getRGB(i, j);
				colors[i][j] = new Color(rgb);
			}
	}
	
	/*
	 * Return the current picture
	 */
	public Picture picture()
	{
		Picture picture = new Picture(w, h);
		for (int i = 0; i < w; i++)
			for (int j = 0; j < h; j++)
				picture.set(i, j, colors[i][j]);
		return picture;
	}
	
	/*
	 * Return the width of the current picture
	 */
	public int width()
	{
		return w;
	}
	
	/*
	 * Return the height of the current picture
	 */
	public int height()
	{
		return h;
	}
	
	/*
	 * Return the energy of pixel (x,y)
	 */
	public double energy(int x, int y)
	{
		if (x < 0 || x >= w || y < 0 || y >= h) throw new IllegalArgumentException();
		if (x == 0 || y == 0 || x == w - 1 || y == - 1) return 1000;
		Color left = colors[x-1][y], right = colors[x+1][y];
		Color up = colors[x][y-1], down = colors[x][y+1];
		double x_comp_square =  (left.getRed() - right.getRed()) * (left.getRed() - right.getRed()) +
								(left.getBlue() - right.getBlue()) * (left.getBlue() - right.getBlue()) +
								(left.getGreen() - right.getGreen()) * (left.getGreen() - right.getGreen());
		double y_comp_square =  (up.getRed() - down.getRed()) * (up.getRed() - down.getRed()) +
								(up.getBlue() - down.getBlue()) * (up.getBlue() - down.getBlue()) +
								(up.getGreen() - down.getGreen()) * (up.getGreen() - down.getGreen());
		double energy = Math.sqrt(x_comp_square + y_comp_square);
		return energy;
	}
	
	public static void main(String[] args)
	{
		Picture pic = new Picture("Minh_Tran.jpg");
		SeamCarver sc = new SeamCarver(pic);
		int[] left = {sc.colors[957][3].getRed(), sc.colors[957][3].getBlue(), sc.colors[957][3].getGreen()};
		int[] right = {sc.colors[959][3].getRed(), sc.colors[959][3].getBlue(), sc.colors[959][3].getGreen()};
		int[] up = {sc.colors[958][2].getRed(), sc.colors[958][2].getBlue(), sc.colors[958][2].getGreen()};
		int[] down = {sc.colors[958][4].getRed(), sc.colors[957][4].getBlue(), sc.colors[958][4].getGreen()};



		System.out.println(java.util.Arrays.toString(left));
		System.out.println(java.util.Arrays.toString(right));
		System.out.println(java.util.Arrays.toString(up));
		System.out.println(java.util.Arrays.toString(down));
		System.out.println(sc.energy(958, 3));
		System.out.println(sc.width() + " " + sc.height());
	}
	
}
